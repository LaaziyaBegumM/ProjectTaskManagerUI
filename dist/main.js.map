{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/project/project.component.css","webpack:///./src/app/project/project.component.html","webpack:///./src/app/project/project.component.ts","webpack:///./src/app/search.pipe.ts","webpack:///./src/app/services/pmProject.service.ts","webpack:///./src/app/services/pmproject.service.ts","webpack:///./src/app/services/pmtask.service.ts","webpack:///./src/app/services/pmuser.service.ts","webpack:///./src/app/task/task.component.css","webpack:///./src/app/task/task.component.html","webpack:///./src/app/task/task.component.ts","webpack:///./src/app/update-task/update-task.component.css","webpack:///./src/app/update-task/update-task.component.html","webpack:///./src/app/update-task/update-task.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/view-task/view-task.component.css","webpack:///./src/app/view-task/view-task.component.html","webpack:///./src/app/view-task/view-task.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {UserComponent} from './user/user.component';\nimport {ProjectComponent} from './project/project.component';\nimport {TaskComponent} from './task/task.component';\nimport {ViewTaskComponent} from './view-task/view-task.component';\nimport {UpdateTaskComponent} from './update-task/update-task.component';\n\n\n\nconst routes: Routes = [    \n  {path: 'user', component:UserComponent},  \n  {path: 'project', component:ProjectComponent},\n  {path: 'task', component:TaskComponent},\n  {path: 'view-task', component:ViewTaskComponent},\n  {path: 'update-task', component:UpdateTaskComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <app-menu></app-menu>\\n  <hr>\\n  <router-outlet></router-outlet>\\n </div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Project Managaer';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './user/user.component';\nimport { ProjectComponent } from './project/project.component';\nimport { TaskComponent } from './task/task.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { ViewTaskComponent } from './view-task/view-task.component';\nimport {PMUserService} from './services/pmuser.service';\nimport { SearchPipe } from './search.pipe';\nimport { UpdateTaskComponent } from './update-task/update-task.component';\nimport {DatePipe} from '@angular/common';\n\nimport { Injectable } from '@angular/core';\nimport { TranslateLoader } from '@ngx-translate/core';\nimport { Observable, of } from 'rxjs';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    ProjectComponent,\n    TaskComponent,\n    MenuComponent,\n    ViewTaskComponent,\n    SearchPipe,\n    UpdateTaskComponent    \n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [PMUserService,DatePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUvbWVudS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <h1>Project Manager</h1>\\n      <ul class=\\\"nav nav-pills\\\">\\n        <li><a [routerLink]=\\\"['/project']\\\">Add Project</a> </li>\\n        <li><a [routerLink]=\\\"['/task']\\\">Add Task</a> </li>\\n        <li><a [routerLink]=\\\"['/user']\\\">Add User</a> </li>\\n        <li><a [routerLink]=\\\"['/view-task']\\\">View Task</a> </li>\\n      </ul>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3QvcHJvamVjdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h2>Add Project</h2>\\n<form class=\\\"project-form\\\" #projectForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(projectForm)\\\">\\n    \\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"text\\\" class=\\\"col-sm-2 col-form-label\\\"> Project: </label>\\n      <div class=\\\"col-sm-5\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" #ProjectName=\\\"ngModel\\\" required  [(ngModel)]=\\\"projectService.project.ProjectName\\\" \\n        name =\\\"ProjectName\\\" placeholder=\\\"Project\\\" autofocus/>        \\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">        \\n        <div class=\\\"col-sm-offset-2\\\">      \\n            <label for=\\\"dateCheck\\\" class=\\\"col-sm-6 col-form-label\\\"><input type=\\\"checkbox\\\"  (click)=\\\"checkDate($event)\\\" \\n              [(ngModel)]=\\\"projectService.project.DateChecked\\\" checked=\\\"projectService.project.DateChecked\\\" id=\\\"DateChecked\\\" name=\\\"DateChecked\\\"> \\n            Set Start and End Date</label>                                           \\n      </div>  \\n      </div>\\n      <div class=\\\"form-group row\\\">        \\n          <div class=\\\"col-sm-offset-2\\\">  \\n              <div class=\\\"col-sm-6\\\">                                                     \\n            <input type=\\\"date\\\" class=\\\"form-control form-control-rounded\\\" \\n            #StartDate=\\\"ngModel\\\" required  \\n            [(ngModel)]=\\\"projectService.project.StartDate\\\"\\n            name =\\\"StartDate\\\" placeholder=\\\"StartDate\\\"/> \\n            <input type=\\\"date\\\" class=\\\"form-control form-control-rounded\\\" \\n            #EndDate=\\\"ngModel\\\" required  \\n            [(ngModel)]=\\\"projectService.project.EndDate\\\"\\n            name =\\\"EndDate\\\" placeholder=\\\"EndDate\\\"/> \\n            </div>            \\n        </div>  \\n      </div>\\n      <label for=\\\"text\\\" style=\\\"margin-left:150px\\\" > 0 <label for=\\\"text\\\" style=\\\"margin-left:180px\\\"> 30</label> </label>                 \\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"text\\\" class=\\\"col-sm-2 col-form-label\\\"> Priority: </label>           \\n        <div class=\\\"col-sm-4\\\">                       \\n          <input type=\\\"range\\\" class=\\\"form-control\\\" #Priority=\\\"ngModel\\\" required [(ngModel)]=\\\"projectService.project.Priority\\\" \\n          name =\\\"Priority\\\" id =\\\"Priority\\\" value=\\\"0\\\" oninput=\\\"amount.value=Priority.value\\\" placeholder=\\\"Priority\\\"  min=\\\"0\\\" max=\\\"30\\\" />     \\n          </div>\\n          <div class=\\\"col-sm-4\\\"> \\n          <output class=\\\"col-sm-2 col-form-label\\\" id=\\\"amount\\\" name=\\\"amount\\\" for=\\\"Piority\\\"></output>   \\n        </div>               \\n      </div>\\n      <div class=\\\"form-group row\\\">\\n          <label for=\\\"text\\\" class=\\\"col-sm-2 col-form-label\\\"> Manager: </label>\\n          <div class=\\\"col-sm-4\\\">\\n            <input readonly type=\\\"text\\\" class=\\\"form-control\\\" #ManagerName=\\\"ngModel\\\" required [(ngModel)]=\\\"projectService.project.ManagerName\\\" \\n            name =\\\"ManagerName\\\" placeholder=\\\"ManagerName\\\" /> \\n            </div>\\n            <div class=\\\"col-sm-1\\\">\\n            <a class=\\\"btn btn-default btn-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">Search</a>&nbsp;               \\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-offset-4\\\">   \\n                <div class=\\\"col-sm-8\\\">               \\n               <button  type=\\\"submit\\\" class=\\\"btn btn-default btn-info\\\" style=\\\"margin-left:75px\\\">Submit</button>                       \\n               &nbsp;<button  type=\\\"button\\\" class=\\\"btn btn-default btn-info\\\" (click)=\\\"reset(projectService.project)\\\">Reset</button>                                       \\n               </div>               \\n            </div>\\n        </div>\\n        <input type=\\\"hidden\\\" name =\\\"ProjectId\\\" #ProjectId=\\\"ngModel\\\" [(ngModel)]=\\\"projectService.project.ProjectId\\\">\\n    <input type=\\\"hidden\\\" name =\\\"UserId\\\" #UserId=\\\"ngModel\\\" [(ngModel)]=\\\"projectService.project.UserId\\\">\\n    <input type=\\\"hidden\\\" name =\\\"Status\\\" #Status=\\\"ngModel\\\" [(ngModel)]=\\\"projectService.project.Status\\\">\\n  </form>\\n<hr>\\n<div>    \\n    <div class=\\\"form-group \\\">       \\n        <div class=\\\"col-sm-7\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"searchText\\\" placeholder=\\\"search..\\\" >                           \\n        </div>\\n        <br>\\n        <br>\\n        </div>\\n        <div class=\\\"form-group row \\\">\\n        <div class=\\\"col-sm-8\\\">            \\n           <label for=\\\"text\\\" class=\\\"col-sm-2 col-form-label\\\"> Sort: </label>  \\n           <a class=\\\"btn btn-default btnSort\\\" (click)=\\\"sort('StartDate')\\\">Start Date</a>&nbsp;\\n           <a class=\\\"btn btn-default btnSort\\\" (click)=\\\"sort('EndDate')\\\">End Date</a>&nbsp;\\n           <a class=\\\"btn btn-default btnSort\\\" (click)=\\\"sort('Priority')\\\">Priority</a>  &nbsp;        \\n           <a class=\\\"btn btn-default btnSort\\\" (click)=\\\"sort('Completed')\\\">Completed</a>  &nbsp;        \\n          </div>\\n      </div>\\n\\n<table class=\\\"table table-sm table-hover table-striped\\\">  \\n    <tr *ngFor=\\\"let project of projectList |search: 'ProjectName' : searchText ; let i= index\\\">\\n      <td>\\n          <label ng-readonly=\\\"all\\\" style=\\\"margin-left:20px\\\">Project: </label>\\n       <label ng-readonly=\\\"all\\\" style=\\\"margin-left:20px\\\">{{project.ProjectName}}</label>      \\n      <br>\\n      <br>\\n        <label ng-readonly=\\\"all\\\" style=\\\"margin-left:20px\\\">No of Tasks: </label>\\n        <label ng-readonly=\\\"all\\\" style=\\\"margin-left:20px\\\">{{project.TaskCount}} </label>\\n        <label ng-readonly=\\\"all\\\" style=\\\"margin-left:165px\\\">Completed:</label>\\n        <label ng-readonly=\\\"all\\\" style=\\\"margin-left:20px\\\">{{project.Status}}</label>\\n        <br>\\n        <label ng-readonly=\\\"all\\\" style=\\\"margin-left:20px\\\">Start Date:</label>  \\n        <label ng-readonly=\\\"all\\\" style=\\\"margin-left:20px\\\">{{project.StartDate|date:'MM/dd/yyyy'}}</label>  \\n        <label ng-readonly=\\\"all\\\" style=\\\"margin-left:50px\\\">End Date:</label>  \\n         <label ng-readonly=\\\"all\\\" style=\\\"margin-left:20px\\\">{{project.EndDate|date:'MM/dd/yyyy'}}</label>        \\n      </td>  \\n      <td>\\n          <label ng-readonly=\\\"all\\\" style=\\\"margin-left:100px\\\">Priority</label><br>\\n          <label ng-readonly=\\\"all\\\" style=\\\"margin-left:100px\\\">{{project.Priority}}</label>  \\n      </td>\\n      <td>\\n          <a class=\\\"btn btn-default btnColor\\\" (click)=\\\"edit(project)\\\">Update</a>&nbsp;\\n          <a *ngIf=\\\"project.Status == 'InProgress'\\\" class=\\\"btn btn-default btnColor\\\" (click)=\\\"suspend(project)\\\">Suspend</a><br>\\n      </td>   \\n    </tr>  \\n  </table>\\n</div>\\n\\n  <div class=\\\"container\\\">     \\n      <!-- Modal -->\\n      <div class=\\\"modal fade\\\" id=\\\"myModal\\\" role=\\\"dialog\\\">\\n        <div class=\\\"modal-dialog\\\">        \\n          <!-- Modal content-->\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n              <h4 class=\\\"modal-title\\\">User List</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <table class=\\\"table table-sm table-hover table-striped\\\">  \\n                    <tr *ngFor=\\\"let user of userList\\\">\\n                      <td>\\n                        <label ng-readonly=\\\"all\\\" >{{user.FirstName}}</label>\\n                      </td>    \\n                        <td>\\n                        <label ng-readonly=\\\"all\\\" >{{user.LastName}}</label>\\n                      </td>    \\n                        <td>\\n                         <label ng-readonly=\\\"all\\\">{{user.EmployeeId}}</label>  &nbsp;&nbsp;  \\n                         <input type=\\\"checkbox\\\"  id=\\\"userCheck\\\" name=\\\"userCheck\\\" [checked]=\\\"checkbox\\\" (change)=\\\"changed(user)\\\">                            \\n                      </td>     \\n                    </tr>  \\n                  </table>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Select</button>\\n            </div>\\n          </div>\\n          \\n        </div>\\n      </div>\\n      \\n    </div>\"","\nimport { Component, OnInit } from '@angular/core';\nimport {PMProjectService} from '../services/pmproject.service';\nimport {PMUserService} from '../services/pmuser.service';\nimport {Project} from '../project';\nimport {User} from '../user';\nimport {Router} from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport {SearchPipe} from '../search.pipe';\nimport{Pipe, PipeTransform} from '@angular/core';\nimport {DatePipe} from '@angular/common';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent implements OnInit {  \n  projectList: Project[];       \n  userList : User[];   \n  dateChecked : boolean;\n  project:Project;\n  today: any;\n  nextDate : any;  \n  sdate: any;\n  edate: any;\n  constructor(public projectService: PMProjectService,private userService : PMUserService) {\n    this.projectService.getProjects().subscribe(i=>this.projectList = i);       \n    this.userService.getUsers().subscribe(i=>this.userList = i);         \n    this.reset();          \n    this.projectService.project.DateChecked = true;           \n    this.today = new Date().toISOString().split('T')[0];      \n    this.nextDate = new Date(Date.now()+24*60*60*1000).toISOString().split('T')[0];\n    this.projectService.project.StartDate = this.today;\n    this.projectService.project.EndDate = this.nextDate;\n  }\n\n  ngOnInit() {                \n    }\n    \n    reset(form?: NgForm)\n    {                  \n        this.projectService.project = {\n          UserId:null,\n          ProjectId :null,\n          ProjectName :'',\n          Priority :null,\n          StartDate :null,\n          EndDate :null,     \n          ManagerName  :'',\n          Status:'',\n          TaskCount: null,\n          DateChecked:null\n        }\n        this.projectService.project.DateChecked = true; \n    }  \n    checkDate(evt) \n    {\n      if(evt.target.checked)\n      {\n        this.dateChecked = true;\n        this.projectService.project.DateChecked = true;  \n      }\n      else\n      {\n        this.dateChecked = false; \n        this.projectService.project.DateChecked = false;         \n      }        \n    } \n    changed(usr:User ) {\n      this.projectService.project.UserId = usr.UserId;\n      this.projectService.project.ManagerName = usr.FirstName +\"  \" + usr.LastName;\n    }\n    sort(colName: any)\n    {     \n      if(colName == \"StartDate\")\n      this.projectList.sort((a,b) => {\n        return <any>new Date(b.StartDate) - <any> new Date(a.StartDate);\n      });\n      if(colName == \"EndDate\")\n      this.projectList.sort((a,b) => {\n        return <any>new Date(b.EndDate) - <any> new Date(a.EndDate);\n      });\n      if(colName == \"Priority\")\n      this.projectList.sort((a,b) => {\n        return <any>new Date(b.Priority) - <any> new Date(a.Priority);\n      });\n      if(colName == \"Completed\")\n      this.projectList.sort((a,b) => {\n        var nameA = a.Status.toLowerCase(),\n        nameB = b.Status.toLowerCase()\n        if(nameA < nameB)\n          return -1\n        if(nameA > nameB)\n          return 1\n        return 0\n      });\n    }\n    onSubmit(form: NgForm){         \n      if(form.value.ProjectName == '' || form.value.ProjectName == null)\n      {\n        alert(\"Enter Project Name\");\n        return;\n      }         \n      if(this.dateChecked == true)     \n      {            \n        if(form.value.StartDate == null)\n        {\n          alert(\"Enter StartDate with Time\");\n          return;\n        }\n\n          if(form.value.EndDate == null)\n          {\n            alert(\"Enter EndDate with Time\");\n            return;\n          }\n      }    \n      if(form.value.ManagerName == '' || form.value.ManagerName == null)\n      {\n        alert(\"Enter Manager Name\");\n        return;\n      }   \n      if(form.value.ProjectId == null){    \n        form.value.Status = \"InProgress\";           \n        this.projectService.Add(form.value)\n        .subscribe(data => {\n          this.reset(form);\n          alert(\"Added Project Successfully\")\n          this.projectService.getProjects().subscribe(i=>this.projectList = i);                    \n        })\n      }\n      else{                \n        this.projectService.Update(form.value)\n        .subscribe(data => {\n          this.reset(form);\n          alert(\"Updated Project Successfully\")\n          this.projectService.getProjects().subscribe(i=>this.projectList = i);\n        })\n      }\n    }\n\n    edit(proj:Project)\n    {            \n      var date = new DatePipe(\"en-US\");    \n      this.sdate = date.transform(proj.StartDate,'MM/dd/yyyy');      \n      this.edate = date.transform(proj.EndDate,'MM/dd/yyyy');\n      proj.StartDate = this.sdate;\n      proj.EndDate = this.edate;  \n      if(proj.StartDate != null && proj.EndDate != null)\n          this.projectService.project.DateChecked = true;  \n      else\n         this.projectService.project.DateChecked = false;            \n      this.projectService.project = Object.assign({},proj);                 \n    }\n\n    suspend(proj:Project){\n      if(confirm('Are you sure to suspend this project ?')== true){\n        proj.Status = \"Suspended\";\n        this.projectService.Update(proj).subscribe(x=>{\n          this.projectService.getProjects().subscribe(i=>this.projectList=i);\n        })\n      }\n    }    \n  }\n\n\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n  transform(items: any[], field: string, searchText: string): any[] {    \n    if(!items) return [];\n    if(!searchText) return items;\n\n    searchText = searchText.toLowerCase();\n\n    return items.filter(item=> item[field].toLowerCase().includes(searchText.toLowerCase())   \n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders,HttpRequest,  HttpResponse } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/Observable\";\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\nimport {Project} from '../project';\n\nlet headersObj = new Headers({'content-Type':'application/json'});\nvar options = { headers: headersObj};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PMProjectService {  \n  project : Project; \n  constructor( private http:HttpClient) { }\n  baseUrl: string = 'http://localhost:49755/api/Project';  \n\n  getProjects():Observable<Project[]>{              \n    return this.http.get<Project[]>(this.baseUrl);             \n };\n    \n get(Id:Number):Observable<Project>{\n   return this.http.get<Project>(this.baseUrl+\"/\" + Id);   \n }\n Add(item:Project):Observable<any>\n {      \n   return this.http.post(this.baseUrl,item);   \n }\n Delete(Id:number):Observable<any>\n {\n   return this.http.delete(this.baseUrl+\"/\"+Id);\n }\n Update(item:Project):Observable<any>{   \n   return this.http.put(this.baseUrl+\"/\"+item.ProjectId, item);\n }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders,HttpRequest,  HttpResponse } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/Observable\";\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\nimport {Project} from '../project';\n\nlet headersObj = new Headers({'content-Type':'application/json'});\nvar options = { headers: headersObj};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PMProjectService {  \n  project : Project; \n  constructor( private http:HttpClient) { }\n  baseUrl: string = 'http://localhost:49755/api/Project';  \n\n  getProjects():Observable<Project[]>{              \n    return this.http.get<Project[]>(this.baseUrl);             \n };\n    \n get(Id:Number):Observable<Project>{\n   return this.http.get<Project>(this.baseUrl+\"/\" + Id);   \n }\n Add(item:Project):Observable<any>\n {      \n   return this.http.post(this.baseUrl,item);   \n }\n Delete(Id:number):Observable<any>\n {\n   return this.http.delete(this.baseUrl+\"/\"+Id);\n }\n Update(item:Project):Observable<any>{   \n   return this.http.put(this.baseUrl+\"/\"+item.ProjectId, item);\n }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders,HttpRequest,  HttpResponse } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/Observable\";\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\nimport {Task} from '../task';\n\nlet headersObj = new Headers({'content-Type':'application/json'});\nvar options = { headers: headersObj};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PMTaskService {  \n  task : Task; \n  constructor( private http:HttpClient) { }\n  baseUrl: string = 'http://localhost:49755/api/Task';\n\n  getTasks():Observable<Task[]>{              \n    return this.http.get<Task[]>(this.baseUrl);             \n };\n    \n get(Id:Number):Observable<Task>{\n   return this.http.get<Task>(this.baseUrl+\"/\" + Id);  \n }\n\n Add(item:Task):Observable<any>\n {      \n   return this.http.post(this.baseUrl,item);   \n }\n Delete(Id:number):Observable<any>\n {\n   return this.http.delete(this.baseUrl+\"/\"+Id);\n }\n Update(item:Task):Observable<any>{   \n   return this.http.put(this.baseUrl+\"/\"+item.TaskId, item);\n }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders,HttpRequest,  HttpResponse } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/Observable\";\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\nimport {User} from '../user';\n\nlet headersObj = new Headers({'content-Type':'application/json'});\nvar options = { headers: headersObj};\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\n\nexport class PMUserService {  \n  user : User; \n  constructor( private http:HttpClient) { }\n  baseUrl: string = 'http://localhost:49755/api/User';\n\n  getUsers():Observable<User[]>{              \n    return this.http.get<User[]>(this.baseUrl);             \n };\n    \n get(Id:Number):Observable<User>{\n   return this.http.get<User>(this.baseUrl+\"/\" + Id);   \n }\n Add(item:User):Observable<any>\n {      \n   return this.http.post(this.baseUrl,item);   \n }\n Delete(Id:number):Observable<any>\n {\n   return this.http.delete(this.baseUrl+\"/\"+Id);\n }\n Update(item:User):Observable<any>{   \n   return this.http.put(this.baseUrl+\"/\"+item.UserId, item);\n }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2svdGFzay5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h2>Add Task</h2>\\n<form class=\\\"task-form\\\" #taskForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(taskForm)\\\">\\n    <input type=\\\"hidden\\\" name =\\\"ProjectId\\\" #ProjectId=\\\"ngModel\\\" [(ngModel)]=\\\"taskService.task.ProjectId\\\">\\n    <input type=\\\"hidden\\\" name =\\\"UserId\\\" #UserId=\\\"ngModel\\\" [(ngModel)]=\\\"taskService.task.UserId\\\">\\n    <input type=\\\"hidden\\\" name =\\\"Status\\\" #Status=\\\"ngModel\\\" [(ngModel)]=\\\"taskService.task.Status\\\">\\n    <input type=\\\"hidden\\\" name =\\\"ParentTaskId\\\" #ParentTaskId=\\\"ngModel\\\" [(ngModel)]=\\\"taskService.task.ParentTaskId\\\">\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"text\\\" class=\\\"col-sm-2 col-form-label\\\"> Project: </label>\\n      <div class=\\\"col-sm-5\\\">\\n        <input type=\\\"text\\\" readonly class=\\\"form-control\\\" #ProjectName=\\\"ngModel\\\" required [(ngModel)]=\\\"taskService.task.ProjectName\\\" \\n        name =\\\"ProjectName\\\" placeholder=\\\"ProjectName\\\" /> \\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n        <a class=\\\"btn btn-default btn-secondary\\\" style=\\\"margin-left:25px\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myProjectModal\\\">Search</a>&nbsp;               \\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"text\\\" class=\\\"col-sm-2 col-form-label\\\"> Task: </label>\\n      <div class=\\\"col-sm-6\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" #TaskName=\\\"ngModel\\\" required  [(ngModel)]=\\\"taskService.task.TaskName\\\" \\n        name =\\\"TaskName\\\" placeholder=\\\"Task\\\" autofocus/>        \\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n        <label><input type=\\\"checkbox\\\"  style=\\\"margin-left:160px\\\"\\n             id=\\\"ParentTask\\\" name=\\\"ParentTask\\\" checked=\\\"taskService.task.ParentTask\\\" [(ngModel)]=\\\"taskService.task.ParentTask\\\" checked=\\\"taskService.task.ParentTask\\\"> \\n          Parent Task </label>     \\n    </div>                                          \\n    <label for=\\\"text\\\" style=\\\"margin-left:150px\\\" > 0 <label for=\\\"text\\\" style=\\\"margin-left:400px\\\"> 30</label> </label>                 \\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"text\\\" class=\\\"col-sm-2 col-form-label\\\"> Priority: </label>           \\n        <div class=\\\"col-sm-6\\\">                       \\n          <input type=\\\"range\\\" class=\\\"form-control\\\" #Priority=\\\"ngModel\\\" required [(ngModel)]=\\\"taskService.task.Priority\\\" \\n          name =\\\"Priority\\\" id =\\\"Priority\\\" oninput=\\\"amount.value=Priority.value\\\" placeholder=\\\"Priority\\\" min=\\\"0\\\" max=\\\"30\\\" />        \\n        </div>   \\n        <div class=\\\"col-sm-3\\\"> \\n            <output class=\\\"col-sm-2 col-form-label\\\" id=\\\"amount\\\" name=\\\"amount\\\" for=\\\"Piority\\\"></output>   \\n          </div>             \\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"text\\\" class=\\\"col-sm-2 col-form-label\\\"> Parent Task: </label>\\n        <div class=\\\"col-sm-5\\\">\\n          <input  readonly type=\\\"text\\\" class=\\\"form-control\\\" #ParentTaskName=\\\"ngModel\\\" required [(ngModel)]=\\\"taskService.task.ParentTaskName\\\" \\n          name =\\\"ParentTaskName\\\" placeholder=\\\"ParentTaskName\\\" /> \\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n          <a class=\\\"btn btn-default btn-secondary\\\" style=\\\"margin-left:25px\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myTaskModal\\\">Search</a>&nbsp;               \\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">        \\n          <div class=\\\"col-sm-offset-2\\\">  \\n              <div class=\\\"col-sm-4\\\">   \\n                  <label for=\\\"text\\\"> Start Date:                                       \\n            <input type=\\\"datetime-local\\\" class=\\\"form-control form-control-rounded\\\" #StartDate=\\\"ngModel\\\" required  \\n            [(ngModel)]=\\\"taskService.task.StartDate\\\"  \\n            name =\\\"StartDate\\\" placeholder=\\\"StartDate\\\" /> </label>             \\n            </div> \\n            <div class=\\\"col-sm-4\\\">   \\n                <label for=\\\"text\\\"> End Date:                                     \\n                    <input type=\\\"datetime-local\\\"  class=\\\"form-control\\\" #EndDate=\\\"ngModel\\\" required  [(ngModel)]=\\\"taskService.task.EndDate\\\" \\n                    name =\\\"EndDate\\\" placeholder=\\\"EndDate\\\" /> </label>                \\n          </div>            \\n        </div>  \\n      </div>                   \\n      <div class=\\\"form-group row\\\">\\n          <label for=\\\"text\\\" class=\\\"col-sm-2 col-form-label\\\"> User: </label>\\n          <div class=\\\"col-sm-5\\\">\\n            <input readonly type=\\\"text\\\" class=\\\"form-control\\\" #UserName=\\\"ngModel\\\" required [(ngModel)]=\\\"taskService.task.UserName\\\" \\n            name =\\\"UserName\\\" placeholder=\\\"UserName\\\" /> \\n            </div>\\n            <div class=\\\"col-sm-2\\\">\\n            <a class=\\\"btn btn-default btn-secondary\\\" style=\\\"margin-left:25px\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">Search</a>&nbsp;               \\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-offset-4\\\">   \\n                <div class=\\\"col-sm-8\\\">               \\n               <button style=\\\"margin-left:160px\\\" type=\\\"submit\\\" class=\\\"btn btn-default btn-info\\\" >Add Task</button>                       \\n               &nbsp;<button  type=\\\"button\\\" class=\\\"btn btn-default btn-info\\\" (click)=\\\"reset(taskService.task)\\\">Reset</button>                                       \\n               </div>               \\n            </div>\\n        </div>\\n  </form>\\n<br>\\n<br>\\n<hr>\\n<div>      \\n    <div class=\\\"container\\\">     \\n        <!-- Modal -->\\n        <div class=\\\"modal fade\\\" id=\\\"myTaskModal\\\" role=\\\"dialog\\\">\\n          <div class=\\\"modal-dialog\\\">        \\n            <!-- Modal content-->\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">Task List</h4>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                  <table class=\\\"table table-sm table-hover table-striped\\\">  \\n                      <tr *ngFor=\\\"let task of taskList\\\">\\n                        <td>\\n                          <label ng-readonly=\\\"all\\\" >{{task.TaskName}}</label>\\n                        </td>    \\n                          <td>\\n                          <label ng-readonly=\\\"all\\\" >{{task.Status}}</label>\\n                        </td>    \\n                          <td>                           \\n                           <input type=\\\"checkbox\\\"  id=\\\"taskCheck\\\" name=\\\"taskCheck\\\" [checked]=\\\"checkbox\\\" (change)=\\\"changedTask(task)\\\">                            \\n                        </td>     \\n                      </tr>  \\n                    </table>\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Select</button>\\n              </div>\\n            </div>\\n            \\n          </div>\\n        </div>      \\n      </div>\\n<div>      \\n    <div class=\\\"container\\\">     \\n        <!-- Modal -->\\n        <div class=\\\"modal fade\\\" id=\\\"myProjectModal\\\" role=\\\"dialog\\\">\\n          <div class=\\\"modal-dialog\\\">        \\n            <!-- Modal content-->\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">Project List</h4>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                  <table class=\\\"table table-sm table-hover table-striped\\\">  \\n                      <tr *ngFor=\\\"let project of projectList\\\">\\n                        <td>\\n                          <label ng-readonly=\\\"all\\\" >{{project.ProjectName}}</label>\\n                        </td>    \\n                          <td>\\n                          <label ng-readonly=\\\"all\\\" >{{project.Status}}</label>\\n                        </td>    \\n                          <td>\\n                           <label ng-readonly=\\\"all\\\">{{project.ProjectId}}</label>  &nbsp;&nbsp;  \\n                           <input type=\\\"checkbox\\\"  id=\\\"projectCheck\\\" name=\\\"projectCheck\\\" [checked]=\\\"checkbox\\\" (change)=\\\"changedProject(project)\\\">                            \\n                        </td>     \\n                      </tr>  \\n                    </table>\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Select</button>\\n              </div>\\n            </div>\\n            \\n          </div>\\n        </div>      \\n      </div>\\n<div>      \\n  <div class=\\\"container\\\">     \\n      <!-- Modal -->\\n      <div class=\\\"modal fade\\\" id=\\\"myModal\\\" role=\\\"dialog\\\">\\n        <div class=\\\"modal-dialog\\\">        \\n          <!-- Modal content-->\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n              <h4 class=\\\"modal-title\\\">User List</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <table class=\\\"table table-sm table-hover table-striped\\\">  \\n                    <tr *ngFor=\\\"let user of userList\\\">\\n                      <td>\\n                        <label ng-readonly=\\\"all\\\" >{{user.FirstName}}</label>\\n                      </td>    \\n                        <td>\\n                        <label ng-readonly=\\\"all\\\" >{{user.LastName}}</label>\\n                      </td>    \\n                        <td>\\n                         <label ng-readonly=\\\"all\\\">{{user.EmployeeId}}</label>  &nbsp;&nbsp;  \\n                         <input type=\\\"checkbox\\\"  id=\\\"userCheck\\\" name=\\\"userCheck\\\" [checked]=\\\"checkbox\\\" (change)=\\\"changed(user)\\\">                            \\n                      </td>     \\n                    </tr>  \\n                  </table>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Select</button>\\n            </div>\\n          </div>\\n          \\n        </div>\\n      </div>      \\n    </div>\"","\n\nimport { Component, OnInit } from '@angular/core';\nimport {PMProjectService} from '../services/pmproject.service';\nimport {PMUserService} from '../services/pmuser.service';\nimport {PMTaskService} from '../services/pmtask.service';\nimport {Project} from '../project';\nimport {User} from '../user';\nimport {Task} from '../task';\nimport {Router} from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport {SearchPipe} from '../search.pipe';\nimport{Pipe, PipeTransform} from '@angular/core';\nimport {DatePipe} from '@angular/common';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {  \n  projectList: Project[];       \n  userList : User[];  \n  taskList :Task[];   \n  constructor(public taskService: PMTaskService,public projectService: PMProjectService,\n    public userService : PMUserService) {          \n  }\n\n  ngOnInit() {         \n    this.projectService.getProjects().subscribe(i=>this.projectList = i);       \n    this.userService.getUsers().subscribe(i=>this.userList = i);         \n    this.taskService.getTasks().subscribe(i=>this.taskList = i);  \n    this.reset();               \n    }\n    \n    reset(form?: NgForm)\n    {                  \n        this.taskService.task = {\n            TaskId: null,\n            ProjectId : null,\n            ProjectName:'',\n            ParentTask: null,\n            TaskName :'',\n            ParentTaskId :null,\n            StartDate :null,\n            EndDate :null,\n            Priority :null,\n            Status :'',\n            UserId :null,  \n            UserName:'',\n            ParentTaskName:'',       \n        }\n    }      \n    changed(usr:User ) {\n      this.taskService.task.UserId = usr.UserId;\n      this.taskService.task.UserName = usr.FirstName +\"  \" + usr.LastName;      \n    }  \n    changedTask(task:Task ) {\n      this.taskService.task.ParentTaskId = task.TaskId;\n      this.taskService.task.ParentTaskName = task.TaskName;\n    }  \n    changedProject(proj:Project ) {\n      this.taskService.task.ProjectId = proj.ProjectId;\n      this.taskService.task.ProjectName = proj.ProjectName;\n    }    \n\n    onSubmit(form: NgForm){  \n      if(form.value.ProjectName == '' || form.value.ProjectName == null)\n      {\n        alert(\"Enter Project Name\");\n        return;\n      }  \n      if(form.value.TaskName == '' || form.value.TaskName == null)\n      {\n        alert(\"Enter Task Name\");\n        return;\n      }          \n                \n        if(form.value.StartDate == null)\n        {\n          alert(\"Enter StartDate with Time\");\n          return;\n        }\n\n        if(form.value.EndDate == null)\n        {\n          alert(\"Enter EndDate with Time\");\n          return;\n        }      \n      if(form.value.UserName == '' || form.value.UserName == null)\n      {\n        alert(\"Enter User Name\");\n        return;\n      }        \n      if(form.value.TaskId == null){    \n        form.value.Status = \"InProgress\";           \n        this.taskService.Add(form.value)\n        .subscribe(data => {\n          this.reset(form);\n          alert(\"Added Task Successfully\")                         \n        })\n      }\n      else{\n        this.taskService.Update(form.value)\n        .subscribe(data => {\n          this.reset(form);\n          alert(\"Updated Task Successfully\")          \n        })\n      }\n    }  \n      \n  }\n\n\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZS10YXNrL3VwZGF0ZS10YXNrLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h2>Update Task</h2>\\n<form class=\\\"updatetask-form\\\" #updatetaskForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(updatetaskForm)\\\">    \\n    <input type=\\\"hidden\\\" name =\\\"TaskId\\\" #TaskId=\\\"ngModel\\\" [(ngModel)]=\\\"taskService.task.TaskId\\\">\\n    <input type=\\\"hidden\\\" name =\\\"UserId\\\" #UserId=\\\"ngModel\\\" [(ngModel)]=\\\"taskService.task.UserId\\\">\\n    <input type=\\\"hidden\\\" name =\\\"Status\\\" #Status=\\\"ngModel\\\" [(ngModel)]=\\\"taskService.task.Status\\\">\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"text\\\" class=\\\"col-sm-2 col-form-label\\\"> Project: </label>\\n      <div class=\\\"col-sm-5\\\">\\n        <input type=\\\"text\\\" readonly class=\\\"form-control\\\" #ProjectName=\\\"ngModel\\\" required [(ngModel)]=\\\"taskService.task.ProjectName\\\"\\n        name =\\\"ProjectName\\\" placeholder=\\\"ProjectName\\\" /> \\n        <input type=\\\"hidden\\\" name =\\\"ProjectId\\\" #ProjectId=\\\"ngModel\\\" [(ngModel)]=\\\"taskService.task.ProjectId\\\">\\n        </div>       \\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"text\\\" class=\\\"col-sm-2 col-form-label\\\"> Task: </label>\\n      <div class=\\\"col-sm-6\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" #TaskName=\\\"ngModel\\\" required  [(ngModel)]=\\\"taskService.task.TaskName\\\" \\n        name =\\\"TaskName\\\" placeholder=\\\"Task\\\" autofocus/>        \\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n        <label><input type=\\\"checkbox\\\" readonly style=\\\"margin-left:160px\\\"\\n             id=\\\"ParentTask\\\" name=\\\"ParentTask\\\"  [(ngModel)]=\\\"taskService.task.ParentTask\\\" checked=\\\"taskService.task.ParentTask\\\" > \\n          Parent Task </label>     \\n    </div>                                          \\n    <label for=\\\"text\\\" style=\\\"margin-left:150px\\\" > 0 <label for=\\\"text\\\" style=\\\"margin-left:380px\\\"> 30</label> </label>                 \\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"text\\\" class=\\\"col-sm-2 col-form-label\\\"> Priority: </label>           \\n        <div class=\\\"col-sm-6\\\">                       \\n          <input type=\\\"range\\\" class=\\\"form-control\\\" #Priority=\\\"ngModel\\\" required [(ngModel)]=\\\"taskService.task.Priority\\\" \\n          name =\\\"Priority\\\" placeholder=\\\"Priority\\\" min=\\\"0\\\" max=\\\"30\\\" />        \\n        </div>               \\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"text\\\" class=\\\"col-sm-2 col-form-label\\\"> Parent Task: </label>\\n        <div class=\\\"col-sm-5\\\">\\n          <input  readonly type=\\\"text\\\" class=\\\"form-control\\\" #ParentTaskName=\\\"ngModel\\\" required [(ngModel)]=\\\"taskService.task.ParentTaskName\\\" \\n          name =\\\"ParentTaskName\\\" placeholder=\\\"ParentTaskName\\\" /> \\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n          <a class=\\\"btn btn-default btn-secondary\\\" style=\\\"margin-left:25px\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myTaskModal\\\">Search</a>&nbsp;               \\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">        \\n          <div class=\\\"col-sm-offset-2\\\">  \\n              <div class=\\\"col-sm-4\\\">   \\n                  <label for=\\\"text\\\"> Start Date:                                       \\n            <input type=\\\"datetime-local\\\" class=\\\"form-control form-control-rounded\\\" #StartDate=\\\"ngModel\\\" required  \\n            [(ngModel)]=\\\"taskService.task.StartDate\\\"  \\n            name =\\\"StartDate\\\" placeholder=\\\"StartDate\\\" /> </label>             \\n            </div> \\n            <div class=\\\"col-sm-4\\\">   \\n                <label for=\\\"text\\\"> End Date:                                     \\n                    <input type=\\\"datetime-local\\\"  class=\\\"form-control\\\" #EndDate=\\\"ngModel\\\" required  [(ngModel)]=\\\"taskService.task.EndDate\\\" \\n                    name =\\\"EndDate\\\" placeholder=\\\"EndDate\\\" /> </label>                \\n          </div>            \\n        </div>  \\n      </div>                   \\n      <div class=\\\"form-group row\\\">\\n          <label for=\\\"text\\\" class=\\\"col-sm-2 col-form-label\\\"> User: </label>\\n          <div class=\\\"col-sm-5\\\">\\n            <input readonly type=\\\"text\\\" class=\\\"form-control\\\" #UserName=\\\"ngModel\\\" required [(ngModel)]=\\\"taskService.task.UserName\\\" \\n            name =\\\"UserName\\\" placeholder=\\\"UserName\\\" /> \\n            </div>\\n            <div class=\\\"col-sm-2\\\">\\n            <a class=\\\"btn btn-default btn-secondary\\\" style=\\\"margin-left:25px\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">Search</a>&nbsp;               \\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-offset-6\\\">   \\n                <div class=\\\"7\\\">               \\n               <button style=\\\"margin-left:15px\\\" type=\\\"submit\\\" class=\\\"btn btn-default btn-info\\\" >Update Task</button>                       \\n               &nbsp;<button  type=\\\"button\\\" class=\\\"btn btn-default btn-info\\\" (click)=\\\"router.navigate(['/view-task'])\\\">Cancel</button>                                       \\n               </div>               \\n            </div>\\n        </div>\\n  </form>\\n<br>\\n<br>\\n<hr>\\n<div>      \\n    <div class=\\\"container\\\">     \\n        <!-- Modal -->\\n        <div class=\\\"modal fade\\\" id=\\\"myTaskModal\\\" role=\\\"dialog\\\">\\n          <div class=\\\"modal-dialog\\\">        \\n            <!-- Modal content-->\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">Task List</h4>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                  <table class=\\\"table table-sm table-hover table-striped\\\">  \\n                      <tr *ngFor=\\\"let task of taskList\\\">\\n                        <td>\\n                          <label ng-readonly=\\\"all\\\" >{{task.TaskName}}</label>\\n                        </td>    \\n                          <td>\\n                          <label ng-readonly=\\\"all\\\" >{{task.Status}}</label>\\n                        </td>    \\n                          <td>\\n                           <label ng-readonly=\\\"all\\\">{{task.TaskId}}</label>  &nbsp;&nbsp;  \\n                           <input type=\\\"checkbox\\\"  id=\\\"taskCheck\\\" name=\\\"taskCheck\\\" [checked]=\\\"checkbox\\\" (change)=\\\"changedTask(task)\\\">                            \\n                        </td>     \\n                      </tr>  \\n                    </table>\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Select</button>\\n              </div>\\n            </div>\\n            \\n          </div>\\n        </div>      \\n      </div>\\n<div>      \\n    <div class=\\\"container\\\">     \\n        <!-- Modal -->\\n        <div class=\\\"modal fade\\\" id=\\\"myProjectModal\\\" role=\\\"dialog\\\">\\n          <div class=\\\"modal-dialog\\\">        \\n            <!-- Modal content-->\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">Project List</h4>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                  <table class=\\\"table table-sm table-hover table-striped\\\">  \\n                      <tr *ngFor=\\\"let project of projectList\\\">\\n                        <td>\\n                          <label ng-readonly=\\\"all\\\" >{{project.ProjectName}}</label>\\n                        </td>    \\n                          <td>\\n                          <label ng-readonly=\\\"all\\\" >{{project.Status}}</label>\\n                        </td>    \\n                          <td>\\n                           <label ng-readonly=\\\"all\\\">{{project.ProjectId}}</label>  &nbsp;&nbsp;  \\n                           <input type=\\\"checkbox\\\"  id=\\\"projectCheck\\\" name=\\\"projectCheck\\\" [checked]=\\\"checkbox\\\" (change)=\\\"changedProject(project)\\\">                            \\n                        </td>     \\n                      </tr>  \\n                    </table>\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n              </div>\\n            </div>\\n            \\n          </div>\\n        </div>      \\n      </div>\\n<div>      \\n  <div class=\\\"container\\\">     \\n      <!-- Modal -->\\n      <div class=\\\"modal fade\\\" id=\\\"myModal\\\" role=\\\"dialog\\\">\\n        <div class=\\\"modal-dialog\\\">        \\n          <!-- Modal content-->\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n              <h4 class=\\\"modal-title\\\">User List</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <table class=\\\"table table-sm table-hover table-striped\\\">  \\n                    <tr *ngFor=\\\"let user of userList\\\">\\n                      <td>\\n                        <label ng-readonly=\\\"all\\\" >{{user.FirstName}}</label>\\n                      </td>    \\n                        <td>\\n                        <label ng-readonly=\\\"all\\\" >{{user.LastName}}</label>\\n                      </td>    \\n                        <td>\\n                         <label ng-readonly=\\\"all\\\">{{user.EmployeeId}}</label>  &nbsp;&nbsp;  \\n                         <input type=\\\"checkbox\\\"  id=\\\"userCheck\\\" name=\\\"userCheck\\\" [checked]=\\\"checkbox\\\" (change)=\\\"changed(user)\\\">                            \\n                      </td>     \\n                    </tr>  \\n                  </table>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n            </div>\\n          </div>\\n          \\n        </div>\\n      </div>      \\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport {PMUserService} from '../services/pmuser.service';\nimport {PMTaskService} from '../services/pmtask.service';\nimport {PMProjectService} from '../services/pmProject.service';\nimport {User} from '../user';\nimport {Task} from '../task';\nimport {Project} from '../project';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport {SearchPipe} from '../search.pipe';\nimport{Pipe, PipeTransform} from '@angular/core';\nimport {DatePipe} from '@angular/common';\n\n@Component({\n  selector: 'app-update-task',\n  templateUrl: './update-task.component.html',\n  styleUrls: ['./update-task.component.css']\n})\nexport class UpdateTaskComponent implements OnInit { \n  projectList : Project[];\n  userList : User[]; \n  taskList :Task[];\n  taskId : number;     \n  constructor(public taskService: PMTaskService,public projectService: PMProjectService,\n    public userService : PMUserService,private activateRoute: ActivatedRoute,public router: Router) {          \n      this.projectService.getProjects().subscribe(i=>this.projectList = i);       \n      this.userService.getUsers().subscribe(i=>this.userList = i); \n      this.taskService.getTasks().subscribe(i=>this.taskList = i);      \n  }\n\n  ngOnInit() {        \n    this.activateRoute.params.subscribe(params=>{\n      this.taskId = + params['TaskId'];                \n    })   \n    this.taskService.get(this.taskId).subscribe(i=>this.taskService.task = i) ; \n   \n    }\n             \n    changed(usr:User ) {\n      this.taskService.task.UserId = usr.UserId;\n      this.taskService.task.UserName = usr.FirstName +\"  \" + usr.LastName;      \n    }  \n    changedTask(task:Task ) {\n      this.taskService.task.ParentTaskId = task.TaskId;\n      this.taskService.task.ParentTaskName = task.TaskName;\n    }  \n       \n\n    onSubmit(form: NgForm){        \n      if(form.value.TaskName == '' || form.value.TaskName == null)\n      {\n        alert(\"Enter Task Name\");\n        return;\n      }          \n                \n        if(form.value.StartDate == null)\n        {\n          alert(\"Enter StartDate with Time\");\n          return;\n        }\n\n        if(form.value.EndDate == null)\n        {\n          alert(\"Enter EndDate with Time\");\n          return;\n        }      \n      if(form.value.UserName == '' || form.value.UserName == null)\n      {\n        alert(\"Enter User Name\");\n        return;\n      }        \n      this.taskService.Update(form.value)\n        .subscribe(data => {         \n          alert(\"Updated task Successfully\")          \n        })                  \n    }  \n      \n  }\n\n\n\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h2>Add User</h2>\\n<form class=\\\"user-form\\\" #userForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(userForm)\\\">\\n    <input type=\\\"hidden\\\" name =\\\"UserId\\\" #UserId=\\\"ngModel\\\" [(ngModel)]=\\\"userService.user.UserId\\\"> \\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"text\\\" class=\\\"col-sm-2 col-form-label\\\"> First Name: </label>\\n      <div class=\\\"col-sm-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" #FirstName=\\\"ngModel\\\" required  [(ngModel)]=\\\"userService.user.FirstName\\\" \\n        name =\\\"Firstname\\\" placeholder=\\\"First Name\\\" autofocus/>\\n        \\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"text\\\" class=\\\"col-sm-2 col-form-label\\\"> Last Name: </label>\\n        <div class=\\\"col-sm-4\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" #LastName=\\\"ngModel\\\" required [(ngModel)]=\\\"userService.user.LastName\\\" \\n          name =\\\"Lastname\\\" placeholder=\\\"Last Name\\\"  />         \\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n          <label for=\\\"text\\\" class=\\\"col-sm-2 col-form-label\\\"> Employee ID: </label>\\n          <div class=\\\"col-sm-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" #EmployeeId=\\\"ngModel\\\" required [(ngModel)]=\\\"userService.user.EmployeeId\\\" \\n            name =\\\"EmployeeId\\\" placeholder=\\\"EmployeeId\\\"  />                   \\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-offset-4\\\">     \\n               <button [disabled]=\\\"!userForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-default btn-info\\\"  >Submit</button>                       \\n               &nbsp;<button  type=\\\"button\\\" class=\\\"btn btn-default btn-info\\\" (click)=\\\"reset(userService.user)\\\">Reset</button>                                       \\n            </div>\\n        </div>\\n  </form>\\n<hr>\\n\\n<div>\\n    <div class=\\\"form-group row\\\">       \\n        <div class=\\\"col-sm-4\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"search..\\\" >                           \\n        </div>\\n        <div class=\\\"col-sm-6\\\">            \\n           <label for=\\\"text\\\" class=\\\"col-sm-2 col-form-label\\\"> Sort: </label>  \\n           <a class=\\\"btn btn-default btnSort\\\" (click)=\\\"sort('FirstName')\\\">First Name</a>&nbsp;\\n           <a class=\\\"btn btn-default btnSort\\\" (click)=\\\"sort('LastName')\\\">Last Name</a>&nbsp;\\n           <a class=\\\"btn btn-default btnSort\\\" (click)=\\\"sort('EmployeeId')\\\">Id</a>  &nbsp;        \\n          </div>\\n      </div>\\n\\n<table class=\\\"table table-sm table-hover table-striped\\\">  \\n    <tr *ngFor=\\\"let user of userList |search: 'FirstName' : searchText ; let i= index\\\">\\n      <td>\\n       <label ng-readonly=\\\"all\\\" class=\\\"disable\\\">{{user.FirstName}}</label> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n        <a class=\\\"btn btn-default btnColor\\\" (click)=\\\"edit(user)\\\">Edit</a><br>\\n        <label ng-readonly=\\\"all\\\" class=\\\"disable\\\">{{user.LastName}}</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n         <a class=\\\"btn btn-default btnColor\\\" (click)=\\\"delete(user.UserId)\\\">Delete</a><br>\\n         <label ng-readonly=\\\"all\\\" class=\\\"disable\\\">{{user.EmployeeId}}</label>        \\n      </td>     \\n    </tr>  \\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {PMUserService} from '../services/pmuser.service';\nimport {User} from '../user';\nimport {Router} from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport {SearchPipe} from '../search.pipe';\nimport {FormControl, FormBuilder, FormGroup,Validators} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {  \n  userList: User[];  \n  text=\"Add User\";\n  userForm : FormGroup;\n  user={\n    UserId:null,\n    FirstName:'',\n    LastName:'',\n    EmployeeId:''\n  };\n  submitter=false;\n  constructor(public userService: PMUserService  ) {  \n    this.createForm();                  \n  }\n\n\n  ngOnInit() {      \n    this.userService.getUsers().subscribe(i=>this.userList = i);     \n    this.reset();     \n    }\n    \n    createForm():void{\n      this.userForm = new FormGroup({\n        'FirstName' : new FormControl(this.user.FirstName, [\n          Validators.required,\n          Validators.minLength(100)\n        ]),\n        'LastName' :  new FormControl(this.user.LastName, [\n          Validators.required,\n          Validators.minLength(50)\n        ]),\n        'EmployeeId' :  new FormControl(this.user.EmployeeId, [\n          Validators.required,\n          Validators.minLength(50)\n        ])      \n      });\n    }\n\n    reset(form?: NgForm)\n    {                  \n        this.userService.user = {\n          UserId:null,\n          FirstName:'',\n          LastName:'',\n          EmployeeId:''\n        }\n    }\n\n    sort(colName: any)\n    {\n      if(colName == \"FirstName\")\n      this.userList.sort((a,b) => {\n        var nameA = a.FirstName.toLowerCase(),\n        nameB = b.FirstName.toLowerCase()\n        if(nameA < nameB)\n          return -1\n        if(nameA > nameB)\n          return 1\n        return 0\n      });\n      if(colName == \"LastName\")\n      this.userList.sort((a,b) => {\n        var nameA = a.LastName.toLowerCase(),\n        nameB = b.LastName.toLowerCase()\n        if(nameA < nameB)\n          return -1\n        if(nameA > nameB)\n          return 1\n        return 0\n      });\n      if(colName == \"EmployeeId\")\n      this.userList.sort((a,b) => {\n        if(a.EmployeeId < b.EmployeeId)\n        return -1\n      if(a.EmployeeId > b.EmployeeId)\n        return 1\n      return 0\n      });\n    }\n    onSubmit(form: NgForm){         \n      if(form.value.UserId == null){        \n        this.userService.Add(form.value)\n        .subscribe(data => {\n          this.reset(form);\n          alert(\"Added User Successfully\")\n          this.userService.getUsers().subscribe(i=>this.userList = i);                    \n        })\n      }\n      else{\n        this.userService.Update(form.value)\n        .subscribe(data => {\n          this.reset(form);\n          alert(\"Updated User Successfully\")\n          this.userService.getUsers().subscribe(i=>this.userList = i);\n        })\n      }\n    }\n\n    edit(usr:User)\n    {\n      this.userService.user = Object.assign({},usr);\n    }\n\n    delete(Id: number){\n      if(confirm('Are you sure to delete this user ?')== true){\n        this.userService.Delete(Id).subscribe(x=>{\n          this.userService.getUsers().subscribe(i=>this.userList=i);\n        })\n      }\n    }\n\n    \n  }\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXctdGFzay92aWV3LXRhc2suY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h2>View Task</h2>\\n<br>\\n<div>    \\n    <div class=\\\"form-group \\\">   \\n        <label for=\\\"text\\\" class=\\\"col-sm-1 col-form-label\\\"> Project: </label>    \\n        <div class=\\\"col-sm-6\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"search..\\\" >                           \\n        </div>\\n        <br>\\n        <br>\\n        </div>\\n        <div class=\\\"form-group row \\\">\\n        <div class=\\\"col-sm-8\\\">            \\n           <label for=\\\"text\\\" class=\\\"col-sm-1 col-form-label\\\" > Sort: </label>  \\n           <a class=\\\"btn btn-default btnSort\\\" style=\\\"margin-left:40px\\\" (click)=\\\"sort('StartDate')\\\">Start Date</a>&nbsp;\\n           <a class=\\\"btn btn-default btnSort\\\" style=\\\"margin-left:3px\\\" (click)=\\\"sort('EndDate')\\\">End Date</a>&nbsp;\\n           <a class=\\\"btn btn-default btnSort\\\" style=\\\"margin-left:3px\\\" (click)=\\\"sort('Priority')\\\">Priority</a>  &nbsp;        \\n           <a class=\\\"btn btn-default btnSort\\\" style=\\\"margin-left:4px\\\" (click)=\\\"sort('Completed')\\\">Completed</a>  &nbsp;        \\n          </div>\\n      </div>\\n<hr>\\n<table class=\\\"table table-sm table-hover table-striped\\\">  \\n  <tr>\\n    <td>\\n        <label  style=\\\"margin-left:5px\\\">Task</label>\\n    </td>\\n    <td>\\n        <label  style=\\\"margin-left:20px\\\">Parent Task</label>\\n    </td>\\n    <td>\\n        <label  style=\\\"margin-left:5px\\\">Priority</label>\\n    </td>\\n    <td>\\n        <label   style=\\\"margin-left:50px\\\">Start Date</label>\\n    </td>\\n    <td>\\n        <label   style=\\\"margin-left:50px\\\">End Date</label>\\n    </td>   \\n    <td>\\n        <label   style=\\\"margin-left:50px\\\">Status</label>\\n    </td> \\n  </tr>\\n  <tr *ngFor=\\\"let task of taskList |search: 'ProjectName' : searchText ; let i= index\\\">\\n      <td>         \\n            <label style=\\\"text-align: center\\\">{{task.TaskName}}</label>  \\n       </td>\\n       <td>        \\n           <label style=\\\"text-align: center\\\">{{task.ParentTaskName}} </label>\\n      </td> \\n      <td>        \\n            <label style=\\\"text-align: center\\\">{{task.Priority}}</label>  \\n       </td>  \\n      <td>         \\n          <label style=\\\"text-align: center\\\">{{task.StartDate}}</label>  \\n      </td>              \\n      <td>         \\n          <label style=\\\"text-align: center\\\">{{task.EndDate}}</label>  \\n      </td> \\n      <td>         \\n          <label style=\\\"text-align: center\\\">{{task.Status}}</label>            \\n      </td>          \\n      <td>\\n          <a class=\\\"btn btn-default btnColor\\\" (click)=\\\"router.navigate(['/update-task',task])\\\">Edit</a> &nbsp;                    \\n        <a  *ngIf=\\\"task.Status == 'InProgress'\\\" class=\\\"btn btn-default btnColor\\\" (click)=\\\"endTask(task)\\\">End Task</a>                \\n      </td>   \\n    </tr>  \\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {PMTaskService} from '../services/pmtask.service';\nimport {Task} from '../task';\nimport { NgForm } from '@angular/forms';\nimport {SearchPipe} from '../search.pipe';\nimport{Pipe, PipeTransform} from '@angular/core';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\nimport {DatePipe} from '@angular/common';\n\nimport { Injectable } from '@angular/core';\nimport { TranslateLoader } from '@ngx-translate/core';\nimport { Observable, of } from 'rxjs';\n\nimport { AngularFireList, AngularFireObject, AngularFireDatabase } from 'angularfire2/database';\n//import { Account } from '../models/Account';\nimport 'rxjs/add/operator/map';\n\n\n@Component({\n  selector: 'app-view-task',\n  templateUrl: './view-task.component.html',\n  styleUrls: ['./view-task.component.css']\n})\nexport class ViewTaskComponent implements OnInit {           \n  taskList :Task[];    \n  constructor(private taskService: PMTaskService, private router: Router) {  \n    this.taskService.getTasks().subscribe(i=>this.taskList = i);        \n  }\n\n  ngOnInit() {                       \n         \n    }\n         \n    sort(colName: any)\n    {     \n      if(colName == \"StartDate\")\n      this.taskList.sort((a,b) => {\n        return <any>new Date(b.StartDate) - <any> new Date(a.StartDate);\n      });\n      if(colName == \"EndDate\")\n      this.taskList.sort((a,b) => {\n        return <any>new Date(b.EndDate) - <any> new Date(a.EndDate);\n      });\n      if(colName == \"Priority\")      \n      this.taskList.sort((a,b) => {\n        return <any>new Date(b.Priority) - <any> new Date(a.Priority);\n      });\n      if(colName == \"Completed\")\n      this.taskList.sort((a,b) => {\n        var nameA = a.Status.toLowerCase(),\n        nameB = b.Status.toLowerCase()\n        if(nameA < nameB)\n          return -1\n        if(nameA > nameB)\n          return 1\n        return 0\n      });\n    } \n\n    endTask(task:Task){\n      if(confirm('Are you sure to end this task ?')== true){\n        task.Status = \"Completed\";\n        this.taskService.Update(task).subscribe(x=>{\n          this.taskService.getTasks().subscribe(i=>this.taskList=i);\n        })\n      }\n    } \n  }\n\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}